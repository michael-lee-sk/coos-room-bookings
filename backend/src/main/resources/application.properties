# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/springbootdb
spring.datasource.username=root
spring.datasource.password=s9920499j
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Enable SQL logging
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Enable logging of SQL execution (Hibernate and JPA-related)
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


# Initialize schema and data
spring.datasource.initialization-mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql

# JPA & Hibernate Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Spring Security Custom User Credentials
spring.security.user.name=customuser
spring.security.user.password=custompassword

# Google OAuth2 Settings
spring.security.oauth2.client.registration.google.client-id=594287888695-kq3r0hb8emd2q44pcj6deb76lm8f6de0.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# Logging Levels for debugging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.jdbc.datasource.init=DEBUG
logging.level.com.example.coosroombookings=DEBUG

# Activate Default Profile (modify as needed for specific environments)
spring.profiles.active=default
